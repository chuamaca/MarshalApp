networks:
  backend:
    driver: bridge
    name: backend
services:
  full-stack-ng:
    build:
      context: D:\Frontend\full-stack-ng
      dockerfile: Dockerfile
    container_name: client.angular.com
    image: client.angular
    networks:
      backend: {}
    ports:
    - published: 8088
      target: 80
  marshalapp.net.rest.api:
    build:
      context: D:\CURSO NET 6\Test de Clases WorkSpace\MarshalApp
      dockerfile: Backend/Domain/Library/MarshalApp.Net.Rest.API/Dockerfile
    container_name: library.service.com
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    image: library.service
    networks:
      backend: {}
    ports:
    - published: 8086
      target: 80
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Cesar\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Cesar\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  marshalapp.net.security.api:
    build:
      context: D:\CURSO NET 6\Test de Clases WorkSpace\MarshalApp
      dockerfile: Backend/Infrastructure/Security/MarshalApp.Net.Security.API/Dockerfile
    container_name: security.service.com
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    image: security.service
    networks:
      backend: {}
    ports:
    - published: 8087
      target: 80
    - target: 80
    - target: 443
    volumes:
    - C:\Users\Cesar\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Cesar\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  sql2019Com:
    container_name: sql2019Com
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Password1234
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      backend: {}
    ports:
    - published: 14334
      target: 1433
version: '3.4'